---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import Voice from "../components/Voice.astro";
import Skill from "../components/Skill.astro";
import GoldenSpiral from "../components/GoldenSpiral.astro";

const skills = [
  {
    name: "HTML",
    percent: 95,
    delay: 0,
  },
  {
    name: "CSS",
    percent: 90,
    delay: 0.1,
  },
  {
    name: "JavaScript",
    percent: 80,
    delay: 0.2,
  },
  {
    name: "NodeJS",
    percent: 60,
    delay: 0.3,
  },
  {
    name: "Python",
    percent: 30,
    delay: 0.4,
  },
];

const hobbies = [
  {
    name: "Playing Computer Game",
    percent: 100,
    delay: 0,
  },
  {
    name: "Listening Music",
    percent: 90,
    delay: 0.2,
  },
  {
    name: "Watching Sports Events",
    percent: 90,
    delay: 0.3,
  },
  {
    name: "Reading",
    percent: 80,
    delay: 0.4,
  },
  {
    name: "Swimming",
    percent: 75,
    delay: 0.4,
  },
];
---

<script>
  const target: HTMLElement | unknown = document.querySelector("#skills");
  const observer = new IntersectionObserver(
    (entries, observer) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          // 元素进入视口时触发动画
          (target as HTMLElement).classList.add("animate");
          observer.unobserve(target as HTMLElement); // 仅触发一次，之后取消观察
        }
      });
    },
    {
      root: null, // 使用视口作为根元素
      threshold: 0.1, // 当目标元素10%进入视口时触发回调
    }
  );

  observer.observe(target as HTMLElement); // 开始观察目标元素
</script>

<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <link rel="stylesheet" href="/fonts/BILLY_ARGEL_FONT/stylesheet.css" />
    <style is:global>
      h1 {
        font-family: "BILLY ARGEL FONT", sans-serif;
        background-image: linear-gradient(135deg, #833ab4, #fd1d1d, #fcb045);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        font-size: 4rem;
      }

      .btn-colorful {
        background-color: #f76591;
        background-image: linear-gradient(-180deg, #ffc16f, #f76591);
        font-size: clamp(0.8rem, 8vw, 0.9rem);
        font-weight: 600;
        color: #fffc;
        width: max-content;
        outline: 0;
        border: 0;
        border-radius: 6px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        padding: 10px 20px;
        margin-top: 26px;
        text-align: center;
        transform: scale(1);
        transition: all 0.2s ease-in;
        cursor: pointer;
        touch-action: manipulation;
        user-select: none;
        pointer-events: auto;
      }

      .btn-colorful:hover {
        color: #fff;
      }

      .skill-container {
        position: relative;
        width: 100%;
        border-radius: 7px;
        padding: 10px 20px;
        background-image: linear-gradient(#fff2, transparent);
        border: 2px solid transparent;
        backdrop-filter: blur(24px);
        box-shadow: inset 0px 0px 180px 5px #ffffff;
        cursor: pointer;
        transition:
          box-shadow 0.3s ease-in-out,
          background-image 0.2s ease-in-out,
          background-color 0.2s ease-in-out,
          border-color 0.2s ease-in-out;
      }
      .skill-container:hover {
        box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
        border-color: rgba(255, 255, 255, 0.3);
        background-image: rgba(255, 255, 255, 0.23);
      }

      .skill-container .skill-box {
        width: 100%;
        margin: 25px 0;
      }
    </style>
  </head>
  <body>
    <Header />
    <main class="container mt-0">
      <h1 class="d-inline-block mb-0">Xephyrus Blog</h1>
      <p class="font-georgia">
        <i
          >Welcome to Xephyrus's blog, you can hear my voice and see my mind on
          this website, as an independent developer, my abilities are very
          limited, but I still hope that everyone likes me and my blog, thank
          you for your stay.</i
        ><button type="button" class="btn-colorful ms-4">Explore</button>
      </p>
      <div class="position-relative d-none d-md-block" style="height: 80vh;">
        <Voice />
      </div>
      <div id="skills" class="row mb-3">
        <div class="col-lg-6 mb-3">
          <h2 class="text-center">My Skills</h2>
          <div class="skill-container">
            {
              skills.map(
                (skill: {
                  percent: number | string;
                  name: string;
                  delay: number;
                }) => (
                  <Skill
                    name={skill.name}
                    percent={skill.percent}
                    delay={skill.delay}
                  />
                )
              )
            }
          </div>
        </div>
        <div class="col-lg-6 mb-3">
          <h2 class="text-center">My Hobbies</h2>
          <div class="skill-container">
            {
              hobbies.map(
                (skill: {
                  percent: number | string;
                  name: string;
                  delay: number;
                }) => (
                  <Skill
                    name={skill.name}
                    percent={skill.percent}
                    delay={skill.delay}
                  />
                )
              )
            }
          </div>
        </div>
        <div class="col-12">
          <h2 class="text-center">Perfect Golden Spiral</h2>
          <GoldenSpiral />
        </div>
      </div>
    </main>

    <Footer />
  </body>
</html>
